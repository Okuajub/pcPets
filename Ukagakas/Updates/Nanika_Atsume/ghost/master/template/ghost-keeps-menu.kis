#==============================================================================
#
# �u�ؘa���v�C�x���g�����p�ȈՃX�N���v�g(Kawari Easy Event Programmed Script)
#  ���j���[�֘A����
#
# �j�d�d�o�r����   �F����܁�������
# OpenKEEPS����    : �n�������j�d�d�o�r�v���W�F�N�g�`�[��
# OpenKEEPS�y�[�W  : http://keeps.sourceforge.jp
# Version2.0 alpha1 2002.09.25 22:30��
# Version2.0 alpha2 2002.09.27 22:07��
# Version2.0 alpha3 2002.09.28 20:07��
# Version2.0 alpha4 2002.09.28 22:06��
# Version2.0 alpha5 2002.09.30 21:45��
# Version2.0 beta1  2002.10.07 00:03��
# Version2.0 beta2  2002.10.12 00:30��
# Version2.0 RC1    2002.10.31 23:00��
# Version2.0 RC2    2002.11.10 22:00��
# Version2.0 RC3    2002.11.25 00:00��
# Version2.0        2002.12.01 00:00��
# Version2.1.0      2003.01.03 12:00��
# Version2.1.1      2003.01.26 23:00��
# Version2.1.2      2003.03.03 23:00��
# Version2.2        2003.04.01 00:00��
# Version2.2.1      2003.04.14 22:00��
# Version2.2.2      2003.05.01 18:00��
# Version2.2.3      2003.05.18 00:00��
# Version2.2.4      2003.06.16 23:00��
# Version2.2.5      2003.07.31 00:00��
# Version2.3.0 snapshot0309211444 2003.09.21 15:00��
# Version3.0.0      2004.06.06 00:00��
# Version3.0.4      2004.06.27 18:30��
# Version3.0.5      2004.07.03 11:30��
# Version3.0.7      2004.07.18 22:30��
# Version3.1.0      2004.09.12 14:00��
# Version3.1.1      2004.09.19 23:00��
# Version3.1.2      2004.09.26 23:15��
# Version3.1.3      2004.10.16 16:15��
# Version3.1.4      2004.10.30 22:45��
# Version3.1.5      2004.11.13 20:30��
# Version3.1.6      2004.11.23 22:30��
# Version3.3.0a6    2005.10.17 00:00��
#
#==============================================================================
# ����ΏہF�u�ؘa���vPhase 8.2.2 �y�я�ʌ݊���
#           �u�����v�i���u�f���v�jMATERIA period 583 �ȏ�
#           CROW�ASSP�Aninix�A�U�ь�ł̓�����l��
#==============================================================================

:crypt
#���j���[����==================================================================

#���� : �u\q?�v�^�O�ŕ\�����ꂽ�I������I���������B
#���� : Select.�����ʎq��
# ���ʎq : �u\q?�v�^�O�Œ�`���ꂽ�A�I�����������ʎq�B

Mainmenu : (
	\b[1]${Mainmenu1}\n\n
	\q["Talk,Randomtalk"]\n
	# \q["Communicate,Talk"]\n
	\q["Goodies,Goodies"]\n
	\q["Options,Option"]\n
	\q["Debug Menu,debug"]\n
	# \q["Special,Special"]\n
	\q["Cancel,Cancel"]\e
)

Select.temp : $(
	# ${mode}". "${food}". "${foodTimeOut}". "${RandomCat}"."
	# $(TheCatReturns 0)
	if $[!${SnowballName}] $(setstr SnowballName ${WhitecatNames});
	if $[!${ToonyName}] $(setstr ToonyName ${GreywhitecatNames});
	if $[!${FirestarName}] $(setstr FirestarName ${OrangecatNames});
	if $[!${RomeoName}] $(setstr RomeoName ${BlackcatNames});
	if $[!${GrayName}] $(setstr GrayName ${GreycatNames});
	if $[!${GreystripeName}] $(setstr GreystripeName ${GreystripecatNames});
	echo ${SnowballName} ${ToonyName} ${FirestarName} ${RomeoName} ${GrayName} ${GreystripeName};
)

Select.debug : (
	\q[View Cat Stats,catstats]\n
	\q[Test Variable,test]\n
	\q[Summon Next Cat,summon]\n
	\q[Farewell Current Cat,farewell]\n
	\q[Summon ALL Cats,AllCats]\n
	\q[First Boot Simulation,firstinitsim]
)

Select.catstats : (
	Mode is ${mode}\n
	Food is ${food}\n
	Food was set out at ${foodTimeOut}\n
	Random cat order is $(foreach @cat RandomCat $(echo ${@cat}" "))\n
	Current cat is $(foreach @cats CurrentCat $(echo ${@cats}" "))\n
)

Select.test : $(
	setstr NewCat $(shift RandomCat); $(
			if $[ !$[ $(find CurrentCat ${NewCat}) ] ] $( unshift CurrentCat ${NewCat}; return $(TheCatReturns ${NewCat}) )
	)
)

Select.summon : $(
	if $[$[$(size RandomCat) > 0]] $(
		setstr NewCat $(shift RandomCat); $(
			if $[ $[$(find CurrentCat "none") > -1] ] $(setstr CurrentCat ${NewCat}; return $(TheCatReturns ${NewCat}) )
			else if $[ $(find CurrentCat ${NewCat}) == -1 ] $( unshift CurrentCat ${NewCat}; return $(TheCatReturns ${NewCat}) ) 
		)
	)
	else $(echo Please fill RandomCat first!)
)

Select.farewell : $(
	if $[$[$(size CurrentCat ) > 0 ] && $[${CurrentCat} != "none"]] $(
		setstr @LeavingCat $( pop CurrentCat ); 
		if $[ ${@LeavingCat} == "none" ] $(setstr @LeavingCat $( pop CurrentCat ));
		TheCatExits ${@LeavingCat};
	)
)

Select.AllCats : $(
	set CurrentCat 0; push CurrentCat 1; push CurrentCat 2; push CurrentCat 3; push CurrentCat 4; push CurrentCat 5;
	echo "\p[2]\s[6000]""\p[3]\s[6100]""\p[4]\s[6200]""\p[5]\s[6300]""\p[6]\s[6400]""\p[7]\s[6500]"
)

Select.Goodies : (
	\1\s[-1]\0\s[0]
	"What would you like to set out?\n\n[half]"
	"\q[Dry Food,dry]\n"
	"\q[Wet Food,wet]\n"
	"\q[Dessert Food,dessert]\n\n[half]"
	"\q[Cancel,Cancel]"

)

Cats : White,Greywhite,Orange,Black,Grey,Greystripe

# SnowballName
WhitecatNames : Paris, Perry, Comet, Artemis, None, Indrid, Cecil, Drums, Taiko
#ToonyName
GreywhitecatNames : Zilla, Donko, Dizzy, Hector, No One, Onkel, Bunny, Piano, Bopem, Socks
#FirestarName
OrangecatNames : Oranges, Garfield, Heathcliff, Firepaw, Bubba, Egg, Nobody, Crunchwrap Supreme, Trumpet, Tangle, Duck, Hazelrah
#RomeoName
BlackcatNames : Jiji, Seven, Miss Kitty, Luna, Coco, Caspian, Null, Brutus, Burger, Oreo, Juniper, Inle
#GrayName
GreycatNames : Yara, Matilda, Cordelia, Nutmeg, Nikt, Mark, Peter, Chicken, Dunky, Doja, Enigma, Fiver, Bigwig
#GreystripeName 
GreystripecatNames : Toona, Chi, Greystripe, Nada, Moss, Pusheen, Rob, Kjell, Hachiware, Kris, Rose

#Unused cat data. I might use it at some point.

CatNames : ${SnowballName}, ${ToonyName}, ${FirestarName}, ${RomeoName}, ${GrayName}, ${GreystripeName}

White : ${SnowballName},dry,playful

Greywhite : dry,sleepy

Orange : wet,brave

Black : wet,friendly

Grey : dessert,aloof

Greystripe : dessert,funny

CatRandomizer : $(
	clear RandomCat;
	setstr @random $(rand 6);
	loop $[${@random} + 6] $(if $[${food} = "dry"] $(adddictstr RandomCat $(rand 2)));
	loop $[${@random} + 6] $(if $[${food} = "wet"] $(adddictstr RandomCat $(rand 4)));
	loop $[${@random} + 6] $(if $[${food} = "dessert"] $(adddictstr RandomCat $[$(rand 2) + 4]));
)

dryfoodTalk : "Dry food. It's a popular choice.","I enjoy classical music. Unfortunately listening to it rattles my house quite often.","People often ask me if I play the violin.\w8 I play the cello, actually."

Select.dry : (
	$(setstr mode "changing")
	$(set foodTimeOut $(date %H)$(date %M))
	$(setstr food "dry"; setstr mode "dryfull")
	${CatRandomizer}
	"\w8\w8\w8\0\s[100]\w8\w8"
	${dryfoodTalk}
	"\w8\w8\w8\0\s[0]\i[1]\i[11]"
)

wetfoodTalk : "Wet food. A lot of cats love it.","My choir group recently started meeting three times a week instead of four.\w8 I don't know what to do with myself on Wednesday nights now.","Have you ever wondered what it would be like to be a sea fish?\w8\w8 I think about it sometimes."
wetfoodTalk : "I saw a waterfall, once, on a train ride.\w8 I've never captured the same sense of joy since.\w4 Equal, yes!\w2 But not the same.", ""

Select.wet : (
	$(setstr mode "changing")
	$(set foodTimeOut $(date %H)$(date %M))
	$(setstr food "wet"; setstr mode "wetfull")
	${CatRandomizer}
	"\w8\w8\w8\0\s[100]\w8\w8"
	${wetfoodTalk}
	"\w8\w8\w8\0\s[0]\i[2]\i[21]"
	"\n\n[half]Smush the food?\n"
	"\q[Yes,smush]\n"
	"\q[No,nosmush]"
)

smushtalk : "What a bold choice! The food cannot easily be put back in its can shape... Permanence is striking.","I hear some cats are picky about having their food be pre-smushed. My grandmother told me about one."
smushtalk : "In the infinity of the universe, do you think someone else is going through a metamorphosis?","Extracting more protein?","Do be gentle, please."

Select.smush : (
	"\0\s[0]\i[2]\i[22]"
	$(setstr food "wet"; setstr mode "wetsmushed")
	"The food is smushed now.\n\n[half]\w8\w4"
	${smushtalk}
)

Select.nosmush : (
	"The food remains unsmushed."
)

dessertfoodTalk : "Dessert food. This cat-safe vanilla pudding is sure to please even the most finicky of felines.","Isn't this bonito and vanilla pudding so sweet?\w8 In a cute sense, I mean.","Did you know that cows are large enough to scare small predators away? They scare me, too."
dessertfoodTalk : "Don't be afraid to put the plate down on me. It's quite roomy on the bottom, really.","I must admit to you, I'm quite fond of the Grasshopper. I'm not sure what to do about it."
dessertfoodTalk : "I'm not really quite sure what a pudding is.\w4 I need to watch the cooking channel more often.","Isn't life so exciting? Meeting new people, and growing up..\w4 It can be a bit scary, too."

Select.dessert : (
	$(setstr mode "changing")
	$(set foodTimeOut $(date %H)$(date %M))
	$(setstr food "dessert"; setstr mode "dessertfull")
	${CatRandomizer}
	"\w8\w8\w8\0\s[100]\w8\w8"
	${dessertfoodTalk}
	"\w8\w8\w8\0\s[0]\i[3]\i[31]"
)

Select.firstinitsim : $(
	FirstInitCond;
)

Mainmenu1 : \0\s[0]$(
	?
		"What can I do for you?"
		"Not every day has to be a good day."
		"You have my attention."
		"What would you like?"
)

Select.Randomtalk : ${sentence}

Select.Option : (
	\1\s[-1]\0\s[0]
	"\0Optional settings, if you'd like them.\n"
	\q["Talk rate,Timing"]\n
	\q["Off-screen talk:" $(if $(isMikireOn) "ON" else "OFF")","Mikire]\n
	# Overlapping Characters talk
	\q["Overlap Talk"$(if $(isKasanariOn) "ON" else "OFF")","Kasanari]\n
	\q["Name,TeachName"]\n
	# Changes personality
	# \q["Change modes,Change"]\n
	# \q[Personality Override $(if $(isOverrideMode) "OFF" else "ON")","Override]\n
	\q["Cancel,Cancel"]\e
	)

Select.Timing : (
	"\0\s[0]\cHow would you like me to talk?\n\n"
	\q["Frequently,Timing3"]\n
	\q["Normally,Timing5"]\n
	\q["Sometimes,Timing7"]\n
	\q["Randomly,TimingRand"]\n
	\q["Never,Timing9"]\n
	\q["Cancel,Cancel"]\e
	)

Select.Timing3 : $(
	setstr interval  28;
	RandomtalkOn;
	)"\0\s[0]I'm glad you like my company so much."

Select.Timing5 : $(
	setstr interval  56;
	RandomtalkOn;
	)"\0\s[0]Moderation is a good practice."

Select.Timing7 : $(
	setstr interval  84;
	RandomtalkOn;
	)"\0\s[0]It's nice to just enjoy each other's company."

Select.TimingRand : $(
	set interval "$[ $(rand 90) + 31 ]";
	RandomtalkOn;
	)"\0\s[0]Spontaneity is the spice of life."

Select.Timing9 : $(
	setstr interval 999;
	RandomtalkOff;
	)"\0\s[0]A nice rest for my voice."

Select.Mikire : \0\s[0]$(
	if $(isMikireOn)
		$(MikireOff)"When you place me off screen, I won't alert you."
	else
		$(MikireOn)"I'll alert you when I'm offscreen, then."
	)\e

Select.Kasanari : \0\s[0]$(
	if $(isKasanariOn)
		$(KasanariOff)"I won't say anything if I'm overlapping something, then."
	else
		$(KasanariOn)"I'll let you know if I'm overlapping something."
	)\e

Select.Override : \0\s[0]$(
	if $(isOverrideMode)
		$(OverrideOff)"�l�i�I�[�o�[���C�h�������ɂȂ�܂����B"
	else
		$(OverrideOn)"�l�i�I�[�o�[���C�h��L���ɂ��܂��B"
	)\e


Select.Cancel : $(resetFreeze)"\b[0]\0\s[0]Another time."

Select.Talk : $(resetFreeze)"\0\s[0]What would you like to say?\![open,communicatebox]"

Select.Special : (
	\0\s[0]\1\s[-1]
	\0Testing Options.\n
	$(anchor Ukagaka �f��).\n
	$(anchor SSP SSP).\n
	$(anchor CROW CROW).\n
	\q["Queue,TalkQueue"]\n
	\q["Queue Check,TalkQueueCheck"]\n
	\q["Send,SendTo"]\n
	\q["Cancel,Cancel"]\e
)

�\�� : 0
Select.TalkQueue : (
	\0\s[0]\1\s[-1]
	$(push talkqueue "$(inc �\��)\0\s[0]\1\s[10]\0�\�񔭘b${�\��}��ڂł��B\e")
	"\0I've reserved that for you.\n"
	"Please note that the reservation counter is now at "${�\��}".\e"
)

Select.TalkQueueCheck : (
	\0\s[0]\1\s[-1]
	"\0There are currently "$(size talkqueue)" in queue.\n"
	"The reservation counter is at "${�\��}"."
)

# Changes to another mode (sometimes considered a 'personality').
# Select.Change : $(chFlagMode Another)\c�d�d�d�B\e

#==============================================================================


#�I������Ƀ}�E�X�J�[�\��======================================================

#���� : �u\q?�v�^�O�ŕ\�����ꂽ�I�����Ƀ}�E�X����������^�O�ꂽ���B
#���� : Selecting.�����ʎq��
# ���ʎq : �u\q?�v�^�O�Œ�`���ꂽ�A�I�����������ʎq�B
#
#��Ɂu������v�̂悤�ȁA�ʃo���[���ɂ��L���v�V�����\�����Ɏg�p���܂�
#�}�E�X���I��������O�ꂽ�ꍇ�AWord1�́uNotSelected�v�ɂȂ�܂�

#Selecting.Timing : $(callsaori ebl ref "���b�^�C�~���O����")
#Selecting.Manzai : $(callsaori ebl ref "�UAI�g�[�N")
#Selecting.Cancel :
#Selecting.NotSelected : $(callsaori ebl ref)

#==============================================================================


#�L�����N�^�^�A���J�[(\_a)�̑I��===============================================

#���� : �u\_a�v�^�O�ŕ\�����ꂽ�L�����N�^�^�A���J�[��I���������B
#���� : Anchor.�����ʎq��
# ���ʎq : �u\_a�v�^�O�Œ�`���ꂽ�A�A���J�[�������ʎq�B
#
#�A���J�[��I�����Ă������Ԃ��Ȃ����A�o���[���\���͂��̂܂܂ɂȂ�܂��B

Anchor.Ukagaka : "\0\s[0]An Ukagaka is a type of desktop toy intended to keep you company.\w8 My additional purpose is to provide a safe place for you, and the cats who visit me."
Anchor.SSP : "\0\s[0]SSP is a program that runs Ukagaka. It is the most popular program to do so.\w4 There are others, such as \_a[CROW]CROW\_a."
Anchor.CROW : "\0\s[0]CROW is an older, no longer maintained program to run Ukagaka. I imagine some people still use it. I am glad people still care."

#==============================================================================


#Input Box�֘A=================================================================

#���� : �u\![open,inputbox,*,*]�v�^�O�ŕ\������Input�{�b�N�X�ɓ��͂��������B
#���� : TalkInput.�����ʎq��
# ���ʎq : �u\![open,inputbox,*,*]�v�^�O�ł�inputbox��ʗp�̎��ʎq���B

#�g�p�o����ϐ�
# System.Request.Reference1 : Input�{�b�N�X�ɓ��͂��ꂽ���e�B

#���O�o����-------------------------------------------------------------------

Select.TeachName : (
	$(
		setstr FlagName 1;
		setFreeze;
	)
	"\0\s[0]Forgive me, what would you like me to call you?"
	\!["open,inputbox,TeachName,-1"]
	\e
)

TalkInput.TeachName : (
	$(
		clear FlagName;
		setstr entername $[ $(SReference 1) || ${username} ];
	)
	\0\s[0]${entername} "... How nice. Is that correct?\n\n"
	\q["Yes.,MemoryName"]\n
	\q["No.,TeachName"]\n
	\q["My old name is fine.,Cancel"]
)

Select.MemoryName : (
	$(
		resetFreeze;
		setstr username ${entername};
		clear entername;
	)
	"\0\s[0]"${username}"... Thank you."
)

#Input Box �^�C���A�E�g--------------------------------------------------------

#���� : Input�{�b�N�X�\����A�w�莞�Ԃ��o�߂��Ă����͂���Ȃ������ꍇ�B
#���� : TalkInputTimeOut.�����ʎq��
# ���ʎq : �u\![open,inputbox,*,*]�v�^�O�ł�inputbox��ʗp�̎��ʎq���B

#�ȉ��͎��Ԑ������{�������̗�B
#*c
#TalkInputTimeOut.TeachName : \0\s[4]���O���͎��Ԑ؂�ł��B\e

#==============================================================================
#
# Hello! If you're peeking into the functions of this Ghost, thank you for taking interest!
# These are the functions for.. most of the things in this Ghost. 
# I am definitely not an expert on Kawari coding, yet, and these were originally made during a 72 hour period, so they may be a bit rough.
# I also didn't add comments for many of them, as they are fairly straightforward.
# If you are interested in Kawari programming, I highly suggest you take a look at the Kawari documentation. I have a work-in-progress machine processed version of it on my website.

=kis
function TheCatReturns $(
	# @arg[1] is the cat's entry number
	.setstr @catP $[$@arg[1] + 2];
	.setstr @catnum $@arg[1];
	setstr @movenum $[$(rand -101) + 100];
	echo \p[${@catP}]\s[-1]\![move,--X=${@movenum},--time=1,--base=0,--base--offset=right.bottom,--option=(ignore-sticky-window)]\w8\w8\w8\p[${@catP}]\s[6$@arg[1]00]"Miau!\0\s[0]Oh! Welcome, "$CatNames[${@catnum}]"!";
)
=end

=kis
function TheCatExits $(
	# @arg[1] is the cat's entry number
	.setstr @catP $[$@arg[1] + 2];
	.setstr @catnum $@arg[1];
	.setstr @catindex $Cats[${@catnum}];
	.setstr @catname $CatNames[${@catnum}];
	if $[ $(size CurrentCat) = 0 ] $(setstr CurrentCat "none");
	echo \p[${@catP}]\s[6${@catnum}03]"Miau-u-u!"\0\s[0]"Oh. It appears "${@catname}" is leaving. Take care, "${@catname}"!\w8\w8\w8\w8\w8\w8"\p[${@catP}]\s[-1];
)
=end

CatNeutralTalk : "\f[italic,true]They look at their surroundings. They seem curious.\f[italic,false]\n\n[half]Mia?"

=kis
function CatNeutral $(
	# @arg[1] is the cat's entry number
	setstr @catP $[$@arg[1] + 2];
	setstr @catnum $@arg[1];
	echo \p[${@catP}]\s[6${@catnum}00]${CatNeutralTalk}\w8\w8\s[6${@catnum}00]
)
=end

CatPlayfulTalk : "\f[italic,true]It looks like they want to play.\f[italic,default]\n\n[half]Miau, miau!"

=kis
function CatPlayful $(
	# @arg[1] is the cat's entry number
	setstr @catP $[$@arg[1] + 2];
	setstr @catnum $@arg[1];
	echo \p[${@catP}]\s[6${@catnum}05]${CatPlayfulTalk}\w8\w8\s[6${@catnum}00]
)
=end

CatSleepyTalk : "\f[italic,true]They look a bit sleepy.\f[italic,default]\n\n[half]M\w2ii\w2i-\w2\w2aa\w2uu\w2u-\w2\w2ww..."

=kis
function CatSleepy $(
	# @arg[1] is the cat's entry number
	setstr @catP $[$@arg[1] + 2];
	setstr @catnum $@arg[1];
	echo \p[${@catP}]\s[6${@catnum}06]${CatSleepyTalk}
)
=end

CatAngryTalk : "\f[italic,true]They make a funny face at you.\f[italic,default]\n\n[half]Mrrrowwwww!!\w8\w8"

=kis
function CatAngry $(
	# @arg[1] is the cat's entry number
	setstr @catP $[$@arg[1] + 2];
	setstr @catnum $@arg[1];
	echo \p[${@catP}]\s[6${@catnum}07]${CatAngryTalk}\w8\w8\s[6${@catnum}00]
)
=end

:endcrypt

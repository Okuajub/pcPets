
# Kawari fake AI dictionary
#　Event Script

# REMEMBER TO GUT THIS - Taken from Jong Chunchun, look at OpenKEEPS event code instead since it's allowed under its license.

# This file handles the events which are called by various functions.

#################################################
#イベント呼び出し : Event call
#################################################

# Before period 565 Event handler 
System.Callback.OnEvent: ${event.${System.Request.Event}}
System.Callback.OnResource: ${resource.${System.Request.ID}}
System.Callback.OnGET      : ${${System.Request.ID}}

#################################################
#基礎イベント : Basic Events, you should not remove these as they allow the Ghost to boot and function properly. But, feel free to alter the dialogue.
#################################################

OnFirstBoot          : \1\s[10]\0\s[0]Nice to meet you.\e
OnGhostChanged       : \1\s[10]\0\s[0]"Hey,\_w[500] I'm Sentinel.\e"
OnShellChanged       : \1\s[10]\0\s[0]"Kept you waiting, huh?\e"
OnWindowStateRestore : \1\s[10]\0\s[0]\e

#Seems like you can set multiple responses for the same event. Perhaps they are chosen randomly like YAYA?

OnBoot : "\1\s[10]\0\s[0]Hey.\e"
OnBoot : "\1\s[10]\0\s[0]Hey, again.\e"
OnBoot : "\1\s[10]\0\s[0]Just another day in a war without end.\_w[500]\n\n[half] On your desktop again?\e"
OnBoot : \1\s[10]\0\s[0]\e

OnClose : "\1\s[10]\0\s[0]See ya\_w[500]\-\e"
OnClose : "\1\s[10]\0\s[0]Another time.\_w[500]\-\e"
OnClose : "\1\s[10]\0\s[0]Bye.\_w[500]\-\e"
OnClose : "\1\s[10]\0\s[0]Leaving so soon?\_w[500]See you.\_w[500]\-\e"

#################################################
#ネットワークイベント : Network Events
#################################################

OnUpdateBegin    : \0\s[0]\_qUpdate Begin.\_q\e
OnUpdateReady    : \0\s[0]\_qUpdating...\_q\e
OnUpdateComplete : \0\s[0]\_q${System.Request.Reference0}.\_q\e
OnUpdateFailure  : \0\s[0]\_q${System.Request.Reference0}.\_q\e

#################################################
#マウスイベント
#################################################

OnMouseDoubleClick : $(
	entry
	MouseDoubleClick${System.Request.Reference3}${System.Request.Reference4}
	${MouseDoubleClick${System.Request.Reference3}}
)

MouseDoubleClick0 : \0\s[0]"What's up?"\e
MouseDoubleClick0 : \0\s[0]"I don't understand all this coding stuff, myself."\e
MouseDoubleClick0 : \0\s[0]"Ah?"\e
MouseDoubleClick0 : \0\s[0]"You don't have to go easy on me, okay?"\e

MouseDoubleClick0Head : \0\s[0]"Looking for something?"\e
MouseDoubleClick0Head : \0\s[0]"I'm a husky, not a cat, got it?"\e

MouseDoubleClick0Face : \0\s[0]"Something on my face?"\e
MouseDoubleClick0Face : \0\s[0]"What's wrong?"\e

MouseDoubleClick1 : \1\s[10]I love learning Kawari!\e
MouseDoubleClick1 : "\1\s[10]If you want to output just a slash, you can use a triple slash, like so. \\\Slash Slash."

MouseDoubleClick1Face : \1\s[10]\i[3]\i[60]"Do you think I'm cute?"
MouseDoubleClick1Face : \1\s[10]Talk Counter is currently at ${talkcounter}!

# まずは「撫でられたキャラクター」を確定 : First, determine the "stroked character"
#Very similar to YAYA... just different syntax.
OnMouseMove : $(
	if $[ ${System.Request.Reference3} == 0 ] $(
		#Investigate 'entry env.MouseMove.1st;'
		entry env.MouseMove.1st;
	) else if $[ ${System.Request.Reference3} == 1 ] $(
		entry env.MouseMove.2nd;
	);
)

# 続いて、キャラクター毎に「撫でカウント」をカウントアップし、設定された数値に達したら
# カウンターをリセットし、そのポイントの撫で反応トークを行う。
# Then count up the "stroking count" for each character, and when it reaches the set number.
# Reset the counter, and then do a stroking reaction talk for that point.

#\h(\0)側。 : '\h(\0)side [of something, such as a triangle]'
env.MouseMove.1st : $(
	inc sys.Move;
	if $[ $[ ${sys.Move} > ${sys.SetMove1st} ] && $[ $(match ${System.Request.Status} talking) < 0 ] ] $(
		setstr sys.Move 0;
		entry MouseMove${System.Request.Reference3}${System.Request.Reference4} ${MouseMove${System.Request.Reference3}};
	);
)

# 撫で反応までの待ち時間 :  Waiting time for petting response
sys.SetMove1st : 100

MouseMove0 : \0
MouseMove0Head : \0\s[5]%selfname、えらい？\e
MouseMove0Head : \0\s[6]%selfname、いい子。\e

MouseMove0Face : \0\s[6]ポーカーフェイス。\e
MouseMove0Face : \0\s[5]白（ハク）！\e

#################################################
#キーイベント : Key [of a keyboard] event
#################################################

OnKeyPress: $(
	entry sys.key.${System.Request.Reference0};
)
sys.key.r: $(
	echo \![reload,shiori]\0\s[0]\_qReloaded.\e;
)
# This is the first function I wrote, to make them talk on command.
sys.key.t: $(
	echo ${sentence}
)
sys.key.f: $(
    echo $(pushstr sentence "This is a test of non-overlap. If this shows up in the random talk, you can add dialogues to nonoverlap as long as they are added before nonoverlap is loaded.")
)
#################################################
#ほか : Other
#################################################

OnSurfaceRestore: \1\s[10]\0\s[0]\e

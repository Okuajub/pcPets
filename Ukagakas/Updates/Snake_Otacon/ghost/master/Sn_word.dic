//---------------------------Envelopes--------------------------
//This .dic file is probably one of the simplest you will have to edit, and in fact, if the way it works doesn't appeal to you, you can completely ignore it if you like!
//Basically, what this file does is set up some things that, for the purposes of this file, I'll call envelopes (this is what they're referred to as on the CROW-SSP Dictionary site... at least, that's what I remember, it's been a while since I've checked it). They are technically functions and can do many things, but this file is mostly an organizational tool for storing lists you may use.
//For the purposes of this file, an envelope is a list that you can populate with items, and this list can be called later during dialogue with the %(name) format. If you've read the walkthrough or gone through any of the other .dic files, you've probably seen these before. %(username) is one, which displays the user's name, and %(heshe) is another, which displays the right pronoun depending on what the user selected in bootend.dic or menu.dic. Other ones include %(passmin), which shows how many minutes have passed since the ghost was started, %(screenheight) which shows the height of the display they're currently on, and %(keroname) for the name of the second character, among many, many others. Many of these are predefined by the AYA scripting and will be listed on the CROW-SSP site mentioned above, and many of them you will never have to use.

//OKUAJUB: Here's where I'm placing most of my custom envelopes.

//Otacon's laughing animation. I should really just make it an animation I can play in his surfaces.txt
//FUTURE OKUAJUB: Unfortunately I'm going to have to leave this grandfathered in, due to switching priorities to the Solid Shell. This "animation" doesn't even animate in the Solid Shell, due to the fact I never built that shell to animate in the first place.
laugh
{
	if nowshell == "retro"; "\1\s[34]\w1\1\s[35]\w2\1\s[36]\w1\1\s[34]\w1\1\s[35]\w2\1\s[36]\w1\1\s[34]\w1\1\s[35]\w2\1\s[36]\w1\1\s[34]\w1\1\s[35]\w2\1\s[36]\w1\1\s[34]\w1\1\s[35]\w2\1\s[36]\w1\1\s[34]\w1\1\s[35]\w2\1\s[36]\w1\1\s[34]\w1\1\s[35]\w2\1\s[36]\w1"
	else; "\1\s[34]\w8\w8"
}

pickAndChoose : nonoverlap //OKUAJUB: Array for Otacon asking the user things. nonoverlap so the user doesn't get too many repeats.
{

	"subs,dubs"
	"winter,summer"
	"PlayStation,XBox"
	"Metal Gear REX, Metal Gear RAY"
	"jeans,sweatpants"
	"T-shirts,button-ups"
	"Digimon,Pokemon"
	"electric,acoustic guitar"
	"iced coffee,hot coffee"
	"dogs,cats"
	"mountains,plains"
	"pizza,spaghetti"
	"cup ramen,scrambled eggs"
	"rootbeer,pepsi"
	"water,soda"
	"Alaska,California"
	"pen,pencil"
	"paperback,hardback books"
	"paper books,E-Books"
	"watching anime,playing video games"
	"offbrand products,on brand products"
	"pirating,buying games"
	"napping,sleeping"
	"plushes,figurines"
	"cute,creepy things"
}

japaneseAnimes
{
	"JoJo"
	"Beastars"
	"Mobile Suit Gundam"
	"Sailor Moon"
	"Psychopass"
	"Megalobox"
	"Inuyasha"
	"Gurren Lagann"
	"Cowboy Bebop"
	"Polar Bear Cafe"
	"The Way of the Househusband"
	"Blue Exorcist"
	"Fullmetal Alchemist"
	"Bungo Stray Dogs"
	"Land of The Lustrous"
	"Assasination Classroom"
	"Evangelion"
	"Wolf Children"
	"Outlaw Star"
	"Paranoia Agent"
	"Perfect Blue"
	"Alien 9"
	"Chi's Sweet Home"
	"Digimon"
	"Lucky Star"
	"Ranma"
	"City Hunter"
	"Konohana Kitan"
	"Usagi Drop"
	"Planetes"
	"Natsume's Book of Friends"
	"Kemono Friends"
	"Flying Witch"
	"Nichijou"
	"Chainsaw Man"
	"Berserk"
	"Naruto"
	"Bleach"
	"One Piece"
}

snakeGrunt
{
	"Hm"
	"Hmm"
	"Hmmm"
	"Mhm"
	"Mhmm"
	"Mmhm"
	"Huh"
}

OtaconIsBusy // I need to do this evaluation extremely frequently. Checks whether Otacon is busy searching codec frequencies or watching Snake.
{
	(codecTimer > 0 && codecTimer != "finished") || (SnakeIsGone)
}

SnakeIsGone //Another frequent evaluation. Snake should be gone when these conditions are true.
{
	missionTimer > 0 && missionTimer != "finished"
}

ItalicsHush //Puts italics to true and stops their talking animations. For narration.
{
	"\f[italic,true]\i[0]\i[1]"
}

//What can you use this kind of envelope for? You can store tons of random information to keep your ghost's dialogue varied! You can store various cities you like in %(city), musicians you like in %(musicians), places your ghost has been in %(places), food you like in %(food), movies you like in %(movie), fandoms you like in %(fandom), characters you like in %(fandomcharacter), celebrities you like under %(celebrity) or friends of yours in %(friends) or bnfs in %(bnfs), folders on your computer under %(folders), Pokemon you like under %(pokemon), insults under %(insult), swear words under %(swearword) which could potentially be hilarious, just about anything! You can make lists of absolutely anything to use with dialogue for your ghost! This .dic file is only limited by your imagination!
//Not only that, but you can put an envelope IN an envelope. Here's another example.

usersfolder
{
	"%(username)'s Recycle Bin"
	"%(username)'s Document folder"
	"%(username)'s... special folder"
}



 //**** Don't touch this ***************************************************************
 
 On_\person
{
 	person
}
